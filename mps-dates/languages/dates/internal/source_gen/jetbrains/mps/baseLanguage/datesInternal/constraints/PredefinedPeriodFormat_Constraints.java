package jetbrains.mps.baseLanguage.datesInternal.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SPropertyId;
import jetbrains.mps.smodel.runtime.PropertyConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BasePropertyConstraintsDescriptor;
import org.jetbrains.mps.openapi.model.SNode;

public class PredefinedPeriodFormat_Constraints extends BaseConstraintsDescriptor {
  public PredefinedPeriodFormat_Constraints() {
    super(MetaIdFactory.conceptId(new UUID(1842350883898016625l, -7531592358064104734l), 34521615669325565l));
  }
  @Override
  protected Map<SPropertyId, PropertyConstraintsDescriptor> getNotDefaultSProperties() {
    Map<SPropertyId, PropertyConstraintsDescriptor> properties = new HashMap<SPropertyId, PropertyConstraintsDescriptor>();
    properties.put(MetaIdFactory.propId(new UUID(1842350883898016625l, -7531592358064104734l), 34521615669325562l, 34521615669325564l), new BasePropertyConstraintsDescriptor(MetaIdFactory.propId(new UUID(1842350883898016625l, -7531592358064104734l), 34521615669325562l, 34521615669325564l), this) {
      @Override
      public boolean hasOwnGetter() {
        return true;
      }
      @Override
      public Object getValue(SNode node) {
        String propertyName = "isPublic";
        return true;
      }
    });
    return properties;
  }
}
