package jetbrains.mps.baseLanguage.datesInternal.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptDateTimeIntPropertyFormatConfiguration = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeIntPropertyFormatConfiguration").super_("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyConfiguration").parents("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyConfiguration").references("dateTimeProperty").alias("format configuration for <{dateTimeProperty}>", "").create();
  /*package*/ final ConceptDescriptor myConceptDateTimeProperty = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("singleForm", "pluralForm").references("jodaDateTimeFieldType", "jodaPeriodType", "jodaDurationType", "periodFormatMethod").create();
  /*package*/ final ConceptDescriptor myConceptDateTimePropertyCardinality = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyCardinality").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("numberOfSymbols", "meaning").create();
  /*package*/ final ConceptDescriptor myConceptDateTimePropertyConfiguration = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyConfiguration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"dateTimePropertyFormatType"}, new boolean[]{true}).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptDateTimePropertyFormatType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyFormatType").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("letter", "meaning", "examples").references("dateTimePropertyCardinality").create();
  /*package*/ final ConceptDescriptor myConceptDateTimePropertySettings = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertySettings").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"dateTimeProperty", "durationType", "locale", "month", "schedulePeriod", "zone"}, new boolean[]{true, true, true, true, true, true}).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeZone = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeZone").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("country", "continentOfCountry").create();
  /*package*/ final ConceptDescriptor myConceptDateTimeZonePropertyFormatConfiguration = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeZonePropertyFormatConfiguration").super_("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyConfiguration").parents("jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyConfiguration").alias("format configuration for zone", "").create();
  /*package*/ final ConceptDescriptor myConceptDurationType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.DurationType").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"jodaDurationFieldType"}, new boolean[]{false}).alias("duration type", "").create();
  /*package*/ final ConceptDescriptor myConceptFormatTokenSettings = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.FormatTokenSettings").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"predefinedDateFormat", "predefinedPeriodFormat", "dateTimePropertyCardinality", "dateTimePropertyFormatConfiguration"}, new boolean[]{true, true, true, true}).create();
  /*package*/ final ConceptDescriptor myConceptIDateFormat = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.IDateFormat").interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").properties("isPublic").create();
  /*package*/ final ConceptDescriptor myConceptIPeriodFormat = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.IPeriodFormat").interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").properties("isPublic").create();
  /*package*/ final ConceptDescriptor myConceptLocale = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.Locale").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"javaLocale"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptMonth = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.Month").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").properties("shortName", "days", "number").create();
  /*package*/ final ConceptDescriptor myConceptPredefinedDateFormat = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.PredefinedDateFormat").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.datesInternal.structure.IDateFormat").children(new String[]{"formatter"}, new boolean[]{false}).alias("predefined format", "").create();
  /*package*/ final ConceptDescriptor myConceptPredefinedPeriodFormat = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.PredefinedPeriodFormat").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.datesInternal.structure.IPeriodFormat").children(new String[]{"formatter"}, new boolean[]{false}).alias("predefined period format", "").create();
  /*package*/ final ConceptDescriptor myConceptSchedulePeriod = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.datesInternal.structure.SchedulePeriod").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").properties("second", "minute", "hour", "dayOfWeek", "dayOfMonth", "month").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptDateTimeIntPropertyFormatConfiguration, myConceptDateTimeProperty, myConceptDateTimePropertyCardinality, myConceptDateTimePropertyConfiguration, myConceptDateTimePropertyFormatType, myConceptDateTimePropertySettings, myConceptDateTimeZone, myConceptDateTimeZonePropertyFormatConfiguration, myConceptDurationType, myConceptFormatTokenSettings, myConceptIDateFormat, myConceptIPeriodFormat, myConceptLocale, myConceptMonth, myConceptPredefinedDateFormat, myConceptPredefinedPeriodFormat, myConceptSchedulePeriod);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0u, conceptFqName)) {
      case 0:
        return myConceptDateTimeIntPropertyFormatConfiguration;
      case 1:
        return myConceptDateTimeProperty;
      case 2:
        return myConceptDateTimePropertyCardinality;
      case 3:
        return myConceptDateTimePropertyConfiguration;
      case 4:
        return myConceptDateTimePropertyFormatType;
      case 5:
        return myConceptDateTimePropertySettings;
      case 6:
        return myConceptDateTimeZone;
      case 7:
        return myConceptDateTimeZonePropertyFormatConfiguration;
      case 8:
        return myConceptDurationType;
      case 9:
        return myConceptFormatTokenSettings;
      case 10:
        return myConceptIDateFormat;
      case 11:
        return myConceptIPeriodFormat;
      case 12:
        return myConceptLocale;
      case 13:
        return myConceptMonth;
      case 14:
        return myConceptPredefinedDateFormat;
      case 15:
        return myConceptPredefinedPeriodFormat;
      case 16:
        return myConceptSchedulePeriod;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0u = new String[]{"jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeIntPropertyFormatConfiguration", "jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeProperty", "jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyCardinality", "jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyConfiguration", "jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertyFormatType", "jetbrains.mps.baseLanguage.datesInternal.structure.DateTimePropertySettings", "jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeZone", "jetbrains.mps.baseLanguage.datesInternal.structure.DateTimeZonePropertyFormatConfiguration", "jetbrains.mps.baseLanguage.datesInternal.structure.DurationType", "jetbrains.mps.baseLanguage.datesInternal.structure.FormatTokenSettings", "jetbrains.mps.baseLanguage.datesInternal.structure.IDateFormat", "jetbrains.mps.baseLanguage.datesInternal.structure.IPeriodFormat", "jetbrains.mps.baseLanguage.datesInternal.structure.Locale", "jetbrains.mps.baseLanguage.datesInternal.structure.Month", "jetbrains.mps.baseLanguage.datesInternal.structure.PredefinedDateFormat", "jetbrains.mps.baseLanguage.datesInternal.structure.PredefinedPeriodFormat", "jetbrains.mps.baseLanguage.datesInternal.structure.SchedulePeriod"};
}
