package jetbrains.mps.baseLanguage.dates.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import java.util.List;
import org.jetbrains.mps.openapi.language.SConceptRepository;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import java.util.ArrayList;
import org.jetbrains.mps.openapi.persistence.PersistenceFacade;
import jetbrains.mps.smodel.SModelUtil_new;
import jetbrains.mps.smodel.SReference;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;

public class DateTimeCompareOperation_Behavior {
  public static void init(SNode thisNode) {
  }
  public static boolean call_hasMillisPrecision_1213877526386(SNode thisNode) {
    return DateTimeCompareOperation_Behavior.call_getDatetimeProperty_1213877526399(thisNode) == ListSequence.fromList(BehaviorReflection.invokeVirtualStatic((Class<List<SNode>>) ((Class) Object.class), SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(thisNode))), "virtual_getDefaultDatetimeProperty_3044950653914717067", new Object[]{})).first();
  }
  public static SNode call_getDatetimeProperty_1213877526399(SNode thisNode) {
    SNode property = SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getReferenceLink(new UUID(-3689458971415590814l, -6289781637635314138l), 1172074800504l, 1172074844144l, "datetimeProperty"));
    if ((property == null)) {
      property = ListSequence.fromList(BehaviorReflection.invokeVirtualStatic((Class<List<SNode>>) ((Class) Object.class), SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(thisNode))), "virtual_getDefaultDatetimeProperty_3044950653914717067", new Object[]{})).first();
    }
    return property;
  }
  public static boolean call_isEQ_1213877526423(SNode thisNode) {
    return SPropertyOperations.hasValue(thisNode, MetaAdapterFactory.getProperty(new UUID(-3689458971415590814l, -6289781637635314138l), 1172074800504l, 1172075381034l, "compareType"), "datetime equals", "datetime equals");
  }
  public static boolean call_isNE_1213877526433(SNode thisNode) {
    return SPropertyOperations.hasValue(thisNode, MetaAdapterFactory.getProperty(new UUID(-3689458971415590814l, -6289781637635314138l), 1172074800504l, 1172075381034l, "compareType"), "datetime not equals", "datetime equals");
  }
  public static boolean call_isLT_1213877526443(SNode thisNode) {
    return SPropertyOperations.hasValue(thisNode, MetaAdapterFactory.getProperty(new UUID(-3689458971415590814l, -6289781637635314138l), 1172074800504l, 1172075381034l, "compareType"), "datetime less", "datetime equals");
  }
  public static boolean call_isGT_1213877526453(SNode thisNode) {
    return SPropertyOperations.hasValue(thisNode, MetaAdapterFactory.getProperty(new UUID(-3689458971415590814l, -6289781637635314138l), 1172074800504l, 1172075381034l, "compareType"), "datetime greater", "datetime equals");
  }
  public static boolean call_isLE_1213877526463(SNode thisNode) {
    return SPropertyOperations.hasValue(thisNode, MetaAdapterFactory.getProperty(new UUID(-3689458971415590814l, -6289781637635314138l), 1172074800504l, 1172075381034l, "compareType"), "datetime less or equals", "datetime equals");
  }
  public static boolean call_isGE_1213877526473(SNode thisNode) {
    return SPropertyOperations.hasValue(thisNode, MetaAdapterFactory.getProperty(new UUID(-3689458971415590814l, -6289781637635314138l), 1172074800504l, 1172075381034l, "compareType"), "datetime greater or equals", "datetime equals");
  }
  public static List<SNode> virtual_getDefaultDatetimeProperty_3044950653914717067(SAbstractConcept thisConcept) {
    List<SNode> result = ListSequence.fromList(new ArrayList<SNode>());
    ListSequence.fromList(result).addElement(SLinkOperations.getTarget(_quotation_createNode_abxvt6_a0a0b0i(), MetaAdapterFactory.getReferenceLink(new UUID(-3689458971415590814l, -6289781637635314138l), 1172489559047l, 1172489570282l, "dateTimeProperty")));
    return result;
  }
  private static SNode _quotation_createNode_abxvt6_a0a0b0i() {
    PersistenceFacade facade = PersistenceFacade.getInstance();
    SNode quotedNode_1 = null;
    SNode quotedNode_2 = null;
    quotedNode_1 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.dates.structure.PeriodConstant", null, null, false);
    quotedNode_1.setReference(MetaAdapterFactory.getReferenceLink(new UUID(-3689458971415590814l, -6289781637635314138l), 1172489559047l, 1172489570282l, "dateTimeProperty"), SReference.create(MetaAdapterFactory.getReferenceLink(new UUID(-3689458971415590814l, -6289781637635314138l), 1172489559047l, 1172489570282l, "dateTimeProperty"), quotedNode_1, facade.createModelReference("r:00000000-0000-4000-0000-011c895903d6(jetbrains.mps.baseLanguage.dates.accessories)"), facade.createNodeId("1172074929011")));
    quotedNode_2 = SModelUtil_new.instantiateConceptDeclaration("jetbrains.mps.baseLanguage.structure.IntegerConstant", null, null, false);
    SNodeAccessUtil.setProperty(quotedNode_2, MetaAdapterFactory.getProperty(new UUID(-935030926396207931l, -6610165693999523818l), 1068580320020l, 1068580320021l, "value"), "10");
    quotedNode_1.addChild("count", quotedNode_2);
    return quotedNode_1;
  }
}
