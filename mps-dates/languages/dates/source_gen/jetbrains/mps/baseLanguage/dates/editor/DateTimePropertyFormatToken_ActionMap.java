package jetbrains.mps.baseLanguage.dates.editor;

/*Generated by MPS */

import jetbrains.mps.openapi.editor.cells.EditorCell;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.openapi.editor.EditorContext;
import jetbrains.mps.openapi.editor.cells.CellActionType;
import jetbrains.mps.editor.runtime.cells.AbstractCellAction;
import jetbrains.mps.baseLanguage.dates.constraints.DateTimePropertFormatTokenUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;

public class DateTimePropertyFormatToken_ActionMap {
  public static void setCellActions(EditorCell editorCell, SNode node, EditorContext context) {
    editorCell.setAction(CellActionType.RIGHT_TRANSFORM, new DateTimePropertyFormatToken_ActionMap.DateTimePropertyFormatToken_ActionMap_RIGHT_TRANSFORM(node));
  }
  public static class DateTimePropertyFormatToken_ActionMap_RIGHT_TRANSFORM extends AbstractCellAction {
    /*package*/ SNode myNode;
    public DateTimePropertyFormatToken_ActionMap_RIGHT_TRANSFORM(SNode node) {
      this.myNode = node;
    }
    public String getDescriptionText() {
      return "Set format type";
    }
    public void execute(EditorContext editorContext) {
      this.execute_internal(editorContext, this.myNode);
    }
    public void execute_internal(EditorContext editorContext, SNode node) {
      if (DateTimePropertFormatTokenUtil.isFormatTypeDefault(node)) {
        SLinkOperations.setTarget(node, MetaAdapterFactory.getReferenceLink(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x111557582aaL, 0x1115577a3b1L, "dateTimePropertyFormatType"), null);
      }
    }
  }
}
