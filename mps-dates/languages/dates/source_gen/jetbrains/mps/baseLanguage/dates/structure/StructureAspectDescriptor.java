package jetbrains.mps.baseLanguage.dates.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {

  /*package*/ final ConceptDescriptor myConceptAbsDateTimeMinusOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.AbsDateTimeMinusOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1116ef18613L)).super_("jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1116edde6e7L)).parents("jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1116edde6e7L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("-", "Positive period from one value to another").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAllTimeZonesConstant = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.AllTimeZonesConstant", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x4977b8045c4fd944L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("allTimeZoneIDs", "gets all the available IDs").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCeilingDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.CeilingDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110f40d50baL)).super_("jetbrains.mps.baseLanguage.dates.structure.RoundDateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110f3f5f368L)).parents("jetbrains.mps.baseLanguage.dates.structure.RoundDateTimeOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110f3f5f368L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("round up to", "Round datetime to the nearest that is greater than").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConditionalFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ConditionalFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104f62960dL)).super_("jetbrains.mps.baseLanguage.dates.structure.FormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).parents("jetbrains.mps.baseLanguage.dates.structure.FormatToken", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(1169563619049L, "conditionPair", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104f69e537L), true, true, false)).children(new String[]{"conditionPair"}, new boolean[]{true}).alias("switch", "conditional token").create();
  /*package*/ final ConceptDescriptor myConceptConstantTimeZoneRef = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ConstantTimeZoneRef", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1207b19a7e0L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1239015906660L, "zone", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1206661af9cL), false)).references("zone").alias("constant timezone", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConvertToDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ConvertToDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x119801d2872L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("instant", "Convert to instant").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConvertToDurationOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ConvertToDurationOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x4a906eb79df57495L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("toDuration", "convert to Duration").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConvertToJavaCalendarOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ConvertToJavaCalendarOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x119802e0363L)).super_("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).parents("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).alias("javaCalendar", "Convert to java.util.Calendar").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConvertToJavaDateOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ConvertToJavaDateOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x119802e42afL)).super_("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).parents("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).alias("javaDate", "Convert to java.util.Date").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConvertToJodaDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ConvertToJodaDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x119802e6cbdL)).super_("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).parents("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).alias("jodaDateTime", "Convert to org.joda.time.DateTime").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateFormat = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateFormat", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104ae24b75L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.datesInternal.structure.IDateFormat").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11150fa943fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1173975856624L, "dateFormatVisibility")).properties("dateFormatVisibility").childDescriptors(new ConceptDescriptorBuilder.Link(1169487470543L, "token", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L), true, true, false)).children(new String[]{"token"}, new boolean[]{true}).alias("date format", "").create();
  /*package*/ final ConceptDescriptor myConceptDateFormatsTable = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateFormatsTable", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104a85da2dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(1169488417691L, "dateFormat", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104ae24b75L), false, true, false)).children(new String[]{"dateFormat"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeCompareOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeCompareOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110e51a2578L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1172075381034L, "compareType")).properties("compareType").referenceDescriptors(new ConceptDescriptorBuilder.Ref(1172074844144L, "datetimeProperty", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), true)).references("datetimeProperty").childDescriptors(new ConceptDescriptorBuilder.Link(1172074898284L, "op1", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1172074912819L, "op2", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"op1", "op2"}, new boolean[]{false, false}).alias("compare dates by <{datetimeProperty}>", "Compare datetimes").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeMinusOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1116edde6e7L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174386223029L, "datetimeProperty", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("datetimeProperty").childDescriptors(new ConceptDescriptorBuilder.Link(1174386153808L, "leftValue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1174386164996L, "rightValue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"leftValue", "rightValue"}, new boolean[]{false, false}).alias("-", "Period from right value to left value").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeMinusPeriodOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusPeriodOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x11914172c6dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1207222904240L, "leftValue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1207222904241L, "rightValue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"leftValue", "rightValue"}, new boolean[]{false, false}).alias("-", "datetime - period").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeOffsetFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeOffsetFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1116acd55b5L)).super_("jetbrains.mps.baseLanguage.dates.structure.FormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).parents("jetbrains.mps.baseLanguage.dates.structure.FormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).childDescriptors(new ConceptDescriptorBuilder.Link(1174321263884L, "durationTypeReference", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1116afa71b5L), false, true, false), new ConceptDescriptorBuilder.Link(779372288057192089L, "referenceTime", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"durationTypeReference", "referenceTime"}, new boolean[]{true, false}).alias("{time} ago", "").create();
  /*package*/ final ConceptDescriptor myConceptDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).abstract_().alias("<datetime operation>", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimePlusPeriodOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimePlusPeriodOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1190f58f002L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1207143609180L, "leftValue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1207143609181L, "rightValue", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"leftValue", "rightValue"}, new boolean[]{false, false}).alias("+", "datetime + period").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimePropertyFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimePropertyFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x111557582aaL)).super_("jetbrains.mps.baseLanguage.dates.structure.FormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).parents("jetbrains.mps.baseLanguage.dates.structure.FormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1173966637440L, "dateTimePropertyFormatConfiguration", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1115a68284dL), false), new ConceptDescriptorBuilder.Ref(1173959975857L, "dateTimePropertyFormatType", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1115516b463L), false)).references("dateTimePropertyFormatConfiguration", "dateTimePropertyFormatType").alias("{<{dateTimePropertyFormatConfiguration}>}", "datetime property").create();
  /*package*/ final ConceptDescriptor myConceptDateTimePropetyReferenceOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimePropetyReferenceOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x11980625aefL)).super_("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).parents("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1209039739637L, "dateTimeProperty", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("dateTimeProperty").alias("<{dateTimeProperty}>", "Get integer value of datetime property").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeType", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110dad324a7L)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("instant", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeWithPropertyOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeWithPropertyOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110f461316cL)).super_("jetbrains.mps.baseLanguage.dates.structure.UnaryDateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110de713ee4L)).parents("jetbrains.mps.baseLanguage.dates.structure.UnaryDateTimeOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110de713ee4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1172331207547L, "dateTimeProperty", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("dateTimeProperty").childDescriptors(new ConceptDescriptorBuilder.Link(1172331281757L, "expression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"expression"}, new boolean[]{false}).alias("with", "same datetime but with property set to").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeWithTZType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeWithTZType", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1098cc06e416f93dL)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("datetime", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeZoneCreator = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeZoneCreator", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x120718bfe0fL)).super_("jetbrains.mps.baseLanguage.structure.AbstractCreator").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).parents("jetbrains.mps.baseLanguage.structure.AbstractCreator").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10ab844af9bL)).childDescriptors(new ConceptDescriptorBuilder.Link(1238855978597L, "string", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"string"}, new boolean[]{false}).alias("timezone", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDateTimeZoneType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DateTimeZoneType", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1205d287ff4L)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("timezone", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDefaultTimeZoneConstant = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DefaultTimeZoneConstant", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1205d3648b8L)).super_("jetbrains.mps.baseLanguage.dates.structure.TimeZoneConstant").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1205d2b6fd0L)).parents("jetbrains.mps.baseLanguage.dates.structure.TimeZoneConstant").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1205d2b6fd0L)).alias("default timezone", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDurationType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DurationType", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x368fe832c55860bbL)).super_("jetbrains.mps.baseLanguage.structure.Type").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).parents("jetbrains.mps.baseLanguage.structure.Type").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506dL)).alias("duration", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDurationTypeReference = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.DurationTypeReference", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1116afa71b5L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174320881454L, "durationType", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1116af7c066L), false)).references("durationType").create();
  /*package*/ final ConceptDescriptor myConceptFixedLocaleFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.FixedLocaleFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x111092834d8L)).super_("jetbrains.mps.baseLanguage.dates.structure.FormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).parents("jetbrains.mps.baseLanguage.dates.structure.FormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1172679863969L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), false), new ConceptDescriptorBuilder.Ref(1172683726790L, "dateFormat", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11150fa943fL), false)).references("locale", "dateFormat").alias("with locale", "").create();
  /*package*/ final ConceptDescriptor myConceptFloorDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.FloorDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110f4052b00L)).super_("jetbrains.mps.baseLanguage.dates.structure.RoundDateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110f3f5f368L)).parents("jetbrains.mps.baseLanguage.dates.structure.RoundDateTimeOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110f3f5f368L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).alias("round down to", "Round datetime to the nearest that is less than").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptFormatDateTimeExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.FormatDateTimeExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x45dd8168385d339eL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.TypeDerivable").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(5034322243092298627L, "dateFormat", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11150fa943fL), false), new ConceptDescriptorBuilder.Ref(5034322243092298628L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), true)).references("dateFormat", "locale").childDescriptors(new ConceptDescriptorBuilder.Link(5034322243092298623L, "datetime", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"datetime"}, new boolean[]{false}).alias("#", "Format datetime using predefined formatter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptFormatExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.FormatExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104f0f640aL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.TypeDerivable", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1169557643590L, "dateFormat", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11150fa943fL), false), new ConceptDescriptorBuilder.Ref(1238661857677L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), true)).references("dateFormat", "locale").childDescriptors(new ConceptDescriptorBuilder.Link(1169557612323L, "dateExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1239015930559L, "zone", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"dateExpression", "zone"}, new boolean[]{false, false}).alias("#", "Format instant using predefined formatter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptFormatPeriodExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.FormatPeriodExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x7aa539ff0eb213L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.TypeDerivable").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(34521615669572119L, "format", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x7aa539ff0aeefaL), false), new ConceptDescriptorBuilder.Ref(34521615669572120L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), true)).references("format", "locale").childDescriptors(new ConceptDescriptorBuilder.Link(34521615669572118L, "period", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"period"}, new boolean[]{false}).alias("#", "Format period using predefined formatter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.FormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptInTimezoneExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.InTimezoneExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x24a1d3f8db6f88ccL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.TypeDerivable").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L)).childDescriptors(new ConceptDescriptorBuilder.Link(2639623922402691278L, "datetime", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(2639623922402691641L, "timezone", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"datetime", "timezone"}, new boolean[]{false, false}).alias("in", "convert to DateTime with Timezone").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptInlineFormatDateTimeExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.InlineFormatDateTimeExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x45dd8168386934b2L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(5034322243093093771L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), true)).references("locale").childDescriptors(new ConceptDescriptorBuilder.Link(5034322243093093769L, "datetime", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(5034322243093093770L, "formatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L), false, true, false)).children(new String[]{"datetime", "formatToken"}, new boolean[]{false, true}).alias("#{<format>}", "Format datetime using inline formatter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptInlineFormatExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.InlineFormatExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1115a39816aL)).super_("jetbrains.mps.baseLanguage.dates.structure.UnaryDateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110de713ee4L)).parents("jetbrains.mps.baseLanguage.dates.structure.UnaryDateTimeOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110de713ee4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1174046000278L, "withLocale")).properties("withLocale").referenceDescriptors(new ConceptDescriptorBuilder.Ref(1174045884375L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), true)).references("locale").childDescriptors(new ConceptDescriptorBuilder.Link(1174039888135L, "formatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L), false, true, false), new ConceptDescriptorBuilder.Link(1239016087043L, "zone", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"formatToken", "zone"}, new boolean[]{true, false}).alias("<datetime>#{<format>}", "Format instant using inline formatter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptLiteralFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.LiteralFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5a5fa7L)).super_("jetbrains.mps.baseLanguage.dates.structure.FormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).parents("jetbrains.mps.baseLanguage.dates.structure.FormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1169495350409L, "value")).properties("value").alias("'", "custom text").create();
  /*package*/ final ConceptDescriptor myConceptMathDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.MathDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1204d557c71L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1238248060720L, "leftExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(1238248060893L, "rightExpression", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"leftExpression", "rightExpression"}, new boolean[]{false, false}).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMaxDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.MaxDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1204d5fd641L)).super_("jetbrains.mps.baseLanguage.dates.structure.MathDateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1204d557c71L)).parents("jetbrains.mps.baseLanguage.dates.structure.MathDateTimeOperation").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1204d557c71L)).alias("max", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptMinDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.MinDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1204d5f6c2bL)).super_("jetbrains.mps.baseLanguage.dates.structure.MathDateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1204d557c71L)).parents("jetbrains.mps.baseLanguage.dates.structure.MathDateTimeOperation").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1204d557c71L)).alias("min", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNeverExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.NeverExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x12043d008cdL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("never", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNotNullOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.NotNullOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x119802b2964L)).super_("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).parents("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).alias("isNotNull", "Check if datetime is not null").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNowExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.NowExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x11053635249L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).alias("now", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNullOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.NullOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x119802b7b9fL)).super_("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).parents("jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1198025a507L)).alias("isNull", "Check if datetime is null").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptParseDateTimeExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ParseDateTimeExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x3cebfd4f53d8b44dL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.TypeDerivable").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(4389880778953634897L, "dateFormat", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11150fa943fL), false), new ConceptDescriptorBuilder.Ref(4389880778953634898L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), true)).references("dateFormat", "locale").childDescriptors(new ConceptDescriptorBuilder.Link(4389880778953634894L, "source", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(4389880778953634895L, "zone", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(4389880778953634896L, "default", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"source", "zone", "default"}, new boolean[]{false, false, false}).alias("parse as", "parse string as datetime").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptParseExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ParseExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1a43c927cceaa86eL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1892577441204578966L, "dateFormat", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11150fa943fL), false), new ConceptDescriptorBuilder.Ref(2583319411283206774L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), true)).references("dateFormat", "locale").childDescriptors(new ConceptDescriptorBuilder.Link(1892577441204578449L, "source", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false), new ConceptDescriptorBuilder.Link(2583319411283206775L, "zone", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false), new ConceptDescriptorBuilder.Link(7678715681280019206L, "default", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), true, false, false)).children(new String[]{"source", "zone", "default"}, new boolean[]{false, false, false}).alias("parse instant as", "parse string as an instant").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPeriodConstant = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodConstant", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110fdd2dc07L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1172489570282L, "dateTimeProperty", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("dateTimeProperty").childDescriptors(new ConceptDescriptorBuilder.Link(1172491543832L, "count", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"count"}, new boolean[]{false}).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPeriodFormat = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodFormat", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e7ff4dL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.datesInternal.structure.IPeriodFormat").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x7aa539ff0aeefaL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(48671598477578846L, "visibility")).properties("visibility").childDescriptors(new ConceptDescriptorBuilder.Link(48671598477578849L, "token", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L), true, true, false)).children(new String[]{"token"}, new boolean[]{true}).alias("period format", "").create();
  /*package*/ final ConceptDescriptor myConceptPeriodFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).abstract_().create();
  /*package*/ final ConceptDescriptor myConceptPeriodFormatsTable = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatsTable", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99ec3726L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L)).childDescriptors(new ConceptDescriptorBuilder.Link(48671598477850408L, "periodFormat", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e7ff4dL), true, true, false)).children(new String[]{"periodFormat"}, new boolean[]{true}).create();
  /*package*/ final ConceptDescriptor myConceptPeriodInPropertyExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodInPropertyExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x3d7856c6fffe4f8L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(276836602888578302L, "datetimeProperty", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("datetimeProperty").childDescriptors(new ConceptDescriptorBuilder.Link(276836602888578300L, "datetime", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"datetime"}, new boolean[]{false}).alias("in", "number of full hours/days/months in period").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPeriodInPropertyOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodInPropertyOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1207c53abe4L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1239037593439L, "absolute")).properties("absolute").referenceDescriptors(new ConceptDescriptorBuilder.Ref(1239036706289L, "datetimeProperty", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("datetimeProperty").childDescriptors(new ConceptDescriptorBuilder.Link(1239209522682L, "datetime", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"datetime"}, new boolean[]{false}).alias("in", "period in days/months/years").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPeriodLiteralFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodLiteralFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81e41L)).super_("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).parents("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(48671598477581894L, "value")).properties("value").alias("'", "custom text").create();
  /*package*/ final ConceptDescriptor myConceptPeriodPropertyFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodPropertyFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x649d02540d21d5e5L)).super_("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).parents("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(5581663871703912302L, "prefix"), new ConceptDescriptorBuilder.Prop(5581663871703912303L, "prefixPlural"), new ConceptDescriptorBuilder.Prop(5581663871703912304L, "suffix"), new ConceptDescriptorBuilder.Prop(5581663871703912305L, "suffixPlural"), new ConceptDescriptorBuilder.Prop(5581663871703912306L, "minDigits"), new ConceptDescriptorBuilder.Prop(1778677549314158601L, "zeroHandling")).properties("prefix", "prefixPlural", "suffix", "suffixPlural", "minDigits", "zeroHandling").referenceDescriptors(new ConceptDescriptorBuilder.Ref(7249953535157223265L, "property", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("property").create();
  /*package*/ final ConceptDescriptor myConceptPeriodReferenceFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodReferenceFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x649d02540d221505L)).super_("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).parents("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(7249953535157212422L, "format", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x7aa539ff0aeefaL), false)).references("format").alias("", "insert period format").create();
  /*package*/ final ConceptDescriptor myConceptPeriodSeparatorFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodSeparatorFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x4d760db7e8735b72L)).super_("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).parents("jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xacea8f99e81260L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(5581663871702358907L, "kind"), new ConceptDescriptorBuilder.Prop(5581663871702358899L, "text"), new ConceptDescriptorBuilder.Prop(5581663871702358900L, "lastText")).properties("kind", "text", "lastText").alias("separator", "printed only with field around").create();
  /*package*/ final ConceptDescriptor myConceptPeriodType = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.PeriodType", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110fdb6e9e7L)).super_("jetbrains.mps.baseLanguage.structure.PrimitiveType").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L)).parents("jetbrains.mps.baseLanguage.structure.PrimitiveType").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x10f0ad8bde4L)).alias("period", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptReferenceFormatToken = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ReferenceFormatToken", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104f67494fL)).super_("jetbrains.mps.baseLanguage.dates.structure.FormatToken").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).parents("jetbrains.mps.baseLanguage.dates.structure.FormatToken").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104b5aa914L)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1169563300146L, "dateFormat", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11150fa943fL), false)).references("dateFormat").alias("<<{dateFormat}>>", "insert date format").create();
  /*package*/ final ConceptDescriptor myConceptRoundDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.RoundDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110f3f5f368L)).super_("jetbrains.mps.baseLanguage.dates.structure.UnaryDateTimeOperation").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110de713ee4L)).parents("jetbrains.mps.baseLanguage.dates.structure.UnaryDateTimeOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110de713ee4L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1172324147302L, "precision", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("precision").alias("round to", "Round datetime to the nearest").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptScheduleLiteral = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.ScheduleLiteral", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x11600278f17L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(1194007836084L, "second"), new ConceptDescriptorBuilder.Prop(1194007839276L, "minute"), new ConceptDescriptorBuilder.Prop(1194007847131L, "hour"), new ConceptDescriptorBuilder.Prop(1194007857175L, "dayOfWeek"), new ConceptDescriptorBuilder.Prop(1194007870973L, "dayOfMonth")).properties("second", "minute", "hour", "dayOfWeek", "dayOfMonth").referenceDescriptors(new ConceptDescriptorBuilder.Ref(1194007702067L, "schedulePeriod", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11600543658L), false), new ConceptDescriptorBuilder.Ref(1194007893424L, "month", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x116004cda12L), true)).references("schedulePeriod", "month").alias("<{schedulePeriod}>", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTimeConstant = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TimeConstant", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0xad0e2f7795f72f7L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.baseLanguage.structure.TypeDerivable").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x117ac2330f4L)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(779372288056193784L, "second"), new ConceptDescriptorBuilder.Prop(779372288056193785L, "minute"), new ConceptDescriptorBuilder.Prop(779372288056193786L, "hour"), new ConceptDescriptorBuilder.Prop(779372288056193787L, "day"), new ConceptDescriptorBuilder.Prop(779372288056193788L, "year")).properties("second", "minute", "hour", "day", "year").referenceDescriptors(new ConceptDescriptorBuilder.Ref(779372288056193789L, "month", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x116004cda12L), false)).references("month").childDescriptors(new ConceptDescriptorBuilder.Link(779372288056193790L, "timezone", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"timezone"}, new boolean[]{false}).alias("time constant", "DD-MM-YEAR HH24:MM:SS").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTimeZoneConstant = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TimeZoneConstant", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1205d2b6fd0L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTimeZoneFromString = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TimeZoneFromString", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1207b49e77eL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1239019204488L, "string", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"string"}, new boolean[]{false}).alias("timezone(id)", "get timezone by id").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTimeZoneIDExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TimeZoneIDExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x3f388579f4ab1c71L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(4555537781927678418L, "timezone_id")).properties("timezone_id").alias("timezone_ID", "timezone with ID").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTimeZoneIdOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TimeZoneIdOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x4977b8045c3ae7caL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L)).alias("id", "timezone string id").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTimeZoneNameOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TimeZoneNameOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x4977b8045c44a4abL)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.structure.IOperation", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL), MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x116b46ac030L), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(5293902215864689837L, "property")).properties("property").referenceDescriptors(new ConceptDescriptorBuilder.Ref(5293902215864942486L, "locale", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x1110937dec2L), true)).references("locale").childDescriptors(new ConceptDescriptorBuilder.Link(5293902215864698564L, "instant", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"instant"}, new boolean[]{false}).alias("name", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTimeZoneOffsetExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TimeZoneOffsetExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x4bf676204812acedL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x19796fa16a19888bL)).propertyDescriptors(new ConceptDescriptorBuilder.Prop(5473692278135819455L, "offsetmillis")).properties("offsetmillis").alias("timezone_offset", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTokenCondition = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TokenCondition", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x11053786e55L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x108bbca0f48L)).staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTokenCondition_datetimeToFormat = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TokenCondition_datetimeToFormat", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1ee74298ef193426L)).super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0x101c66e2c0bL)).alias("datetimeToFormat", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptTokenConditionalPair = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.TokenConditionalPair", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1104f69e537L)).super_("jetbrains.mps.lang.core.structure.BaseConcept").super_(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).parents("jetbrains.mps.lang.core.structure.BaseConcept").parentIds(MetaIdFactory.conceptId(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x10802efe25aL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1169563482193L, "format", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x11150fa943fL), false)).references("format").childDescriptors(new ConceptDescriptorBuilder.Link(1169563469176L, "condition", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x11053786e55L), false, false, false)).children(new String[]{"condition"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptUTCTimeZoneConstant = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.UTCTimeZoneConstant", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1205d372679L)).super_("jetbrains.mps.baseLanguage.dates.structure.TimeZoneConstant").super_(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1205d2b6fd0L)).parents("jetbrains.mps.baseLanguage.dates.structure.TimeZoneConstant").parentIds(MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x1205d2b6fd0L)).alias("UTC timezone", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptUnaryDateTimeOperation = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.UnaryDateTimeOperation", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x110de713ee4L)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).childDescriptors(new ConceptDescriptorBuilder.Link(1171964003156L, "datetime", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL), false, false, false)).children(new String[]{"datetime"}, new boolean[]{false}).abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptWithPropertyCompareExpression = new ConceptDescriptorBuilder("jetbrains.mps.baseLanguage.dates.structure.WithPropertyCompareExpression", MetaIdFactory.conceptId(0xcccc689cf3654862L, 0xa8b634ecddf8ee26L, 0x12085b6ecdbL)).super_("jetbrains.mps.baseLanguage.structure.Expression").super_(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).parents("jetbrains.mps.baseLanguage.structure.Expression").parentIds(MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xf8c37f506fL)).referenceDescriptors(new ConceptDescriptorBuilder.Ref(1239193967166L, "datetimeProperty", MetaIdFactory.conceptId(0x1991585e225e4371L, 0x977a68a7888adae2L, 0x110e512caf7L), false)).references("datetimeProperty").childDescriptors(new ConceptDescriptorBuilder.Link(1239198287872L, "operation", MetaIdFactory.conceptId(0xf3061a5392264cc5L, 0xa443f952ceaf5816L, 0xfbdeb6fecfL), false, false, false)).children(new String[]{"operation"}, new boolean[]{false}).alias("by", "by property").staticScope(StaticScope.NONE).create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbsDateTimeMinusOperation, myConceptAllTimeZonesConstant, myConceptCeilingDateTimeOperation, myConceptConditionalFormatToken, myConceptConstantTimeZoneRef, myConceptConvertToDateTimeOperation, myConceptConvertToDurationOperation, myConceptConvertToJavaCalendarOperation, myConceptConvertToJavaDateOperation, myConceptConvertToJodaDateTimeOperation, myConceptDateFormat, myConceptDateFormatsTable, myConceptDateTimeCompareOperation, myConceptDateTimeMinusOperation, myConceptDateTimeMinusPeriodOperation, myConceptDateTimeOffsetFormatToken, myConceptDateTimeOperation, myConceptDateTimePlusPeriodOperation, myConceptDateTimePropertyFormatToken, myConceptDateTimePropetyReferenceOperation, myConceptDateTimeType, myConceptDateTimeWithPropertyOperation, myConceptDateTimeWithTZType, myConceptDateTimeZoneCreator, myConceptDateTimeZoneType, myConceptDefaultTimeZoneConstant, myConceptDurationType, myConceptDurationTypeReference, myConceptFixedLocaleFormatToken, myConceptFloorDateTimeOperation, myConceptFormatDateTimeExpression, myConceptFormatExpression, myConceptFormatPeriodExpression, myConceptFormatToken, myConceptInTimezoneExpression, myConceptInlineFormatDateTimeExpression, myConceptInlineFormatExpression, myConceptLiteralFormatToken, myConceptMathDateTimeOperation, myConceptMaxDateTimeOperation, myConceptMinDateTimeOperation, myConceptNeverExpression, myConceptNotNullOperation, myConceptNowExpression, myConceptNullOperation, myConceptParseDateTimeExpression, myConceptParseExpression, myConceptPeriodConstant, myConceptPeriodFormat, myConceptPeriodFormatToken, myConceptPeriodFormatsTable, myConceptPeriodInPropertyExpression, myConceptPeriodInPropertyOperation, myConceptPeriodLiteralFormatToken, myConceptPeriodPropertyFormatToken, myConceptPeriodReferenceFormatToken, myConceptPeriodSeparatorFormatToken, myConceptPeriodType, myConceptReferenceFormatToken, myConceptRoundDateTimeOperation, myConceptScheduleLiteral, myConceptTimeConstant, myConceptTimeZoneConstant, myConceptTimeZoneFromString, myConceptTimeZoneIDExpression, myConceptTimeZoneIdOperation, myConceptTimeZoneNameOperation, myConceptTimeZoneOffsetExpression, myConceptTokenCondition, myConceptTokenCondition_datetimeToFormat, myConceptTokenConditionalPair, myConceptUTCTimeZoneConstant, myConceptUnaryDateTimeOperation, myConceptWithPropertyCompareExpression);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0ad, conceptFqName)) {
      case 0:
        return myConceptAbsDateTimeMinusOperation;
      case 1:
        return myConceptAllTimeZonesConstant;
      case 2:
        return myConceptCeilingDateTimeOperation;
      case 3:
        return myConceptConditionalFormatToken;
      case 4:
        return myConceptConstantTimeZoneRef;
      case 5:
        return myConceptConvertToDateTimeOperation;
      case 6:
        return myConceptConvertToDurationOperation;
      case 7:
        return myConceptConvertToJavaCalendarOperation;
      case 8:
        return myConceptConvertToJavaDateOperation;
      case 9:
        return myConceptConvertToJodaDateTimeOperation;
      case 10:
        return myConceptDateFormat;
      case 11:
        return myConceptDateFormatsTable;
      case 12:
        return myConceptDateTimeCompareOperation;
      case 13:
        return myConceptDateTimeMinusOperation;
      case 14:
        return myConceptDateTimeMinusPeriodOperation;
      case 15:
        return myConceptDateTimeOffsetFormatToken;
      case 16:
        return myConceptDateTimeOperation;
      case 17:
        return myConceptDateTimePlusPeriodOperation;
      case 18:
        return myConceptDateTimePropertyFormatToken;
      case 19:
        return myConceptDateTimePropetyReferenceOperation;
      case 20:
        return myConceptDateTimeType;
      case 21:
        return myConceptDateTimeWithPropertyOperation;
      case 22:
        return myConceptDateTimeWithTZType;
      case 23:
        return myConceptDateTimeZoneCreator;
      case 24:
        return myConceptDateTimeZoneType;
      case 25:
        return myConceptDefaultTimeZoneConstant;
      case 26:
        return myConceptDurationType;
      case 27:
        return myConceptDurationTypeReference;
      case 28:
        return myConceptFixedLocaleFormatToken;
      case 29:
        return myConceptFloorDateTimeOperation;
      case 30:
        return myConceptFormatDateTimeExpression;
      case 31:
        return myConceptFormatExpression;
      case 32:
        return myConceptFormatPeriodExpression;
      case 33:
        return myConceptFormatToken;
      case 34:
        return myConceptInTimezoneExpression;
      case 35:
        return myConceptInlineFormatDateTimeExpression;
      case 36:
        return myConceptInlineFormatExpression;
      case 37:
        return myConceptLiteralFormatToken;
      case 38:
        return myConceptMathDateTimeOperation;
      case 39:
        return myConceptMaxDateTimeOperation;
      case 40:
        return myConceptMinDateTimeOperation;
      case 41:
        return myConceptNeverExpression;
      case 42:
        return myConceptNotNullOperation;
      case 43:
        return myConceptNowExpression;
      case 44:
        return myConceptNullOperation;
      case 45:
        return myConceptParseDateTimeExpression;
      case 46:
        return myConceptParseExpression;
      case 47:
        return myConceptPeriodConstant;
      case 48:
        return myConceptPeriodFormat;
      case 49:
        return myConceptPeriodFormatToken;
      case 50:
        return myConceptPeriodFormatsTable;
      case 51:
        return myConceptPeriodInPropertyExpression;
      case 52:
        return myConceptPeriodInPropertyOperation;
      case 53:
        return myConceptPeriodLiteralFormatToken;
      case 54:
        return myConceptPeriodPropertyFormatToken;
      case 55:
        return myConceptPeriodReferenceFormatToken;
      case 56:
        return myConceptPeriodSeparatorFormatToken;
      case 57:
        return myConceptPeriodType;
      case 58:
        return myConceptReferenceFormatToken;
      case 59:
        return myConceptRoundDateTimeOperation;
      case 60:
        return myConceptScheduleLiteral;
      case 61:
        return myConceptTimeConstant;
      case 62:
        return myConceptTimeZoneConstant;
      case 63:
        return myConceptTimeZoneFromString;
      case 64:
        return myConceptTimeZoneIDExpression;
      case 65:
        return myConceptTimeZoneIdOperation;
      case 66:
        return myConceptTimeZoneNameOperation;
      case 67:
        return myConceptTimeZoneOffsetExpression;
      case 68:
        return myConceptTokenCondition;
      case 69:
        return myConceptTokenCondition_datetimeToFormat;
      case 70:
        return myConceptTokenConditionalPair;
      case 71:
        return myConceptUTCTimeZoneConstant;
      case 72:
        return myConceptUnaryDateTimeOperation;
      case 73:
        return myConceptWithPropertyCompareExpression;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0ad = new String[]{"jetbrains.mps.baseLanguage.dates.structure.AbsDateTimeMinusOperation", "jetbrains.mps.baseLanguage.dates.structure.AllTimeZonesConstant", "jetbrains.mps.baseLanguage.dates.structure.CeilingDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.ConditionalFormatToken", "jetbrains.mps.baseLanguage.dates.structure.ConstantTimeZoneRef", "jetbrains.mps.baseLanguage.dates.structure.ConvertToDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.ConvertToDurationOperation", "jetbrains.mps.baseLanguage.dates.structure.ConvertToJavaCalendarOperation", "jetbrains.mps.baseLanguage.dates.structure.ConvertToJavaDateOperation", "jetbrains.mps.baseLanguage.dates.structure.ConvertToJodaDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.DateFormat", "jetbrains.mps.baseLanguage.dates.structure.DateFormatsTable", "jetbrains.mps.baseLanguage.dates.structure.DateTimeCompareOperation", "jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusOperation", "jetbrains.mps.baseLanguage.dates.structure.DateTimeMinusPeriodOperation", "jetbrains.mps.baseLanguage.dates.structure.DateTimeOffsetFormatToken", "jetbrains.mps.baseLanguage.dates.structure.DateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.DateTimePlusPeriodOperation", "jetbrains.mps.baseLanguage.dates.structure.DateTimePropertyFormatToken", "jetbrains.mps.baseLanguage.dates.structure.DateTimePropetyReferenceOperation", "jetbrains.mps.baseLanguage.dates.structure.DateTimeType", "jetbrains.mps.baseLanguage.dates.structure.DateTimeWithPropertyOperation", "jetbrains.mps.baseLanguage.dates.structure.DateTimeWithTZType", "jetbrains.mps.baseLanguage.dates.structure.DateTimeZoneCreator", "jetbrains.mps.baseLanguage.dates.structure.DateTimeZoneType", "jetbrains.mps.baseLanguage.dates.structure.DefaultTimeZoneConstant", "jetbrains.mps.baseLanguage.dates.structure.DurationType", "jetbrains.mps.baseLanguage.dates.structure.DurationTypeReference", "jetbrains.mps.baseLanguage.dates.structure.FixedLocaleFormatToken", "jetbrains.mps.baseLanguage.dates.structure.FloorDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.FormatDateTimeExpression", "jetbrains.mps.baseLanguage.dates.structure.FormatExpression", "jetbrains.mps.baseLanguage.dates.structure.FormatPeriodExpression", "jetbrains.mps.baseLanguage.dates.structure.FormatToken", "jetbrains.mps.baseLanguage.dates.structure.InTimezoneExpression", "jetbrains.mps.baseLanguage.dates.structure.InlineFormatDateTimeExpression", "jetbrains.mps.baseLanguage.dates.structure.InlineFormatExpression", "jetbrains.mps.baseLanguage.dates.structure.LiteralFormatToken", "jetbrains.mps.baseLanguage.dates.structure.MathDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.MaxDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.MinDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.NeverExpression", "jetbrains.mps.baseLanguage.dates.structure.NotNullOperation", "jetbrains.mps.baseLanguage.dates.structure.NowExpression", "jetbrains.mps.baseLanguage.dates.structure.NullOperation", "jetbrains.mps.baseLanguage.dates.structure.ParseDateTimeExpression", "jetbrains.mps.baseLanguage.dates.structure.ParseExpression", "jetbrains.mps.baseLanguage.dates.structure.PeriodConstant", "jetbrains.mps.baseLanguage.dates.structure.PeriodFormat", "jetbrains.mps.baseLanguage.dates.structure.PeriodFormatToken", "jetbrains.mps.baseLanguage.dates.structure.PeriodFormatsTable", "jetbrains.mps.baseLanguage.dates.structure.PeriodInPropertyExpression", "jetbrains.mps.baseLanguage.dates.structure.PeriodInPropertyOperation", "jetbrains.mps.baseLanguage.dates.structure.PeriodLiteralFormatToken", "jetbrains.mps.baseLanguage.dates.structure.PeriodPropertyFormatToken", "jetbrains.mps.baseLanguage.dates.structure.PeriodReferenceFormatToken", "jetbrains.mps.baseLanguage.dates.structure.PeriodSeparatorFormatToken", "jetbrains.mps.baseLanguage.dates.structure.PeriodType", "jetbrains.mps.baseLanguage.dates.structure.ReferenceFormatToken", "jetbrains.mps.baseLanguage.dates.structure.RoundDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.ScheduleLiteral", "jetbrains.mps.baseLanguage.dates.structure.TimeConstant", "jetbrains.mps.baseLanguage.dates.structure.TimeZoneConstant", "jetbrains.mps.baseLanguage.dates.structure.TimeZoneFromString", "jetbrains.mps.baseLanguage.dates.structure.TimeZoneIDExpression", "jetbrains.mps.baseLanguage.dates.structure.TimeZoneIdOperation", "jetbrains.mps.baseLanguage.dates.structure.TimeZoneNameOperation", "jetbrains.mps.baseLanguage.dates.structure.TimeZoneOffsetExpression", "jetbrains.mps.baseLanguage.dates.structure.TokenCondition", "jetbrains.mps.baseLanguage.dates.structure.TokenCondition_datetimeToFormat", "jetbrains.mps.baseLanguage.dates.structure.TokenConditionalPair", "jetbrains.mps.baseLanguage.dates.structure.UTCTimeZoneConstant", "jetbrains.mps.baseLanguage.dates.structure.UnaryDateTimeOperation", "jetbrains.mps.baseLanguage.dates.structure.WithPropertyCompareExpression"};
}
