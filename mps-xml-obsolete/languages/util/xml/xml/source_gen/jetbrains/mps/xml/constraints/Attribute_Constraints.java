package jetbrains.mps.xml.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import java.util.UUID;
import java.util.Map;
import jetbrains.mps.smodel.adapter.ids.SReferenceLinkId;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsDescriptor;
import java.util.HashMap;
import jetbrains.mps.smodel.runtime.base.BaseReferenceConstraintsDescriptor;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.runtime.ReferenceScopeProvider;
import jetbrains.mps.smodel.runtime.base.BaseReferenceScopeProvider;
import jetbrains.mps.smodel.IOperationContext;
import jetbrains.mps.smodel.runtime.ReferenceConstraintsContext;
import jetbrains.mps.smodel.search.ISearchScope;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.xml.actions.ElementUtil;
import jetbrains.mps.smodel.search.SModelSearchUtil;
import jetbrains.mps.smodel.search.SimpleSearchScope;
import jetbrains.mps.xmlSchema.behavior.ElementDeclaration_Behavior;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.SNodePointer;

public class Attribute_Constraints extends BaseConstraintsDescriptor {
  public Attribute_Constraints() {
    super(MetaIdFactory.conceptId(new UUID(3194679053860949738l, -5054431440157877063l), 1167700349452l));
  }
  @Override
  protected Map<SReferenceLinkId, ReferenceConstraintsDescriptor> getNotDefaultSReferenceLinks() {
    Map<SReferenceLinkId, ReferenceConstraintsDescriptor> references = new HashMap<SReferenceLinkId, ReferenceConstraintsDescriptor>();
    references.put(MetaIdFactory.refId(new UUID(3194679053860949738l, -5054431440157877063l), 1167700349452l, 1167701332877l), new BaseReferenceConstraintsDescriptor(MetaIdFactory.refId(new UUID(3194679053860949738l, -5054431440157877063l), 1167700349452l, 1167701332877l), this) {
      @Override
      public boolean hasOwnScopeProvider() {
        return true;
      }
      @Nullable
      @Override
      public ReferenceScopeProvider getScopeProvider() {
        return new BaseReferenceScopeProvider() {
          @Override
          public Object createSearchScopeOrListOfNodes(final IOperationContext operationContext, final ReferenceConstraintsContext _context) {
            ISearchScope searchScope;
            SNode elementDeclaration = ElementUtil.getParentElementDeclaration(_context.getEnclosingNode());
            if ((elementDeclaration == null)) {
              searchScope = SModelSearchUtil.createModelAndImportedModelsScope(_context.getModel(), false);
            } else {
              searchScope = new SimpleSearchScope(ElementDeclaration_Behavior.call_getAttributeDeclarations_1213877429821(elementDeclaration));
            }
            return searchScope;
          }
          @Override
          public SNodeReference getSearchScopeValidatorNode() {
            return breakingNode_oyfip5_a0a1a0a0a1a0b0a1a1;
          }
        };
      }
    });
    return references;
  }
  private static SNodePointer breakingNode_oyfip5_a0a1a0a0a1a0b0a1a1 = new SNodePointer("r:00000000-0000-4000-0000-011c89590585(jetbrains.mps.xml.constraints)", "1213104860621");
}
