package jetbrains.mps.gtext.generator.baseLanguage.template.util;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.UUID;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import java.util.List;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SModelOperations;
import jetbrains.mps.util.IterableUtil;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;

public class GTextOptimizer {
  public GTextOptimizer() {
  }
  public static SNode optimize(SNode item, boolean mayReplace) {
    if (SNodeOperations.isInstanceOf(item, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412982980l, "jetbrains.mps.gtext.structure.GItemList")) || SNodeOperations.isInstanceOf(item, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1179109169620l, "jetbrains.mps.gtext.structure.GConditionalLine")) || SNodeOperations.isInstanceOf(item, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1166926309597l, "jetbrains.mps.gtext.structure.GLine"))) {
      if (optimizeItems(item) == 1 && mayReplace && SNodeOperations.isInstanceOf(item, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412982980l, "jetbrains.mps.gtext.structure.GItemList"))) {
        SNode child = (SNode) (item.getChildren("item").iterator().next());
        SNodeOperations.replaceWithAnother(item, child);
        item = child;
      }
      return item;
    }
    return item;
  }
  public static SNode optimize(SNode item) {
    return optimize(item, true);
  }
  public static int optimizeItems(SNode item) {
    // inline item lists 
    SNode n = item;
    for (SNode child : ListSequence.fromList((List<SNode>) n.getChildren("item"))) {
      SNode optChild = optimize(child);
      if (SNodeOperations.isInstanceOf(optChild, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412982980l, "jetbrains.mps.gtext.structure.GItemList"))) {
        inlineChildren(optChild, optChild);
        SNodeOperations.deleteNode(optChild);
      } else
      if (SNodeOperations.isInstanceOf(optChild, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1179109169620l, "jetbrains.mps.gtext.structure.GConditionalLine"))) {
        SNode nextChild = optChild;
        if (SPropertyOperations.getBoolean(SNodeOperations.cast(optChild, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1179109169620l, "jetbrains.mps.gtext.structure.GConditionalLine")), MetaAdapterFactory.getProperty(new UUID(-6324114011398976607l, -8974808928016009858l), 1179109169620l, 1179109261107l, "isSeparate"))) {
          SNodeOperations.insertNextSiblingChild(nextChild, SModelOperations.createNewNode(SNodeOperations.getModel(item), null, "jetbrains.mps.gtext.structure.GIndent"));
          nextChild = SNodeOperations.cast(SNodeOperations.getNextSibling(nextChild), MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412935041l, "jetbrains.mps.gtext.structure.GItem"));
        }
        nextChild = inlineChildren(optChild, nextChild);
        if (SPropertyOperations.getBoolean(SNodeOperations.cast(optChild, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1179109169620l, "jetbrains.mps.gtext.structure.GConditionalLine")), MetaAdapterFactory.getProperty(new UUID(-6324114011398976607l, -8974808928016009858l), 1179109169620l, 1179109261107l, "isSeparate"))) {
          SNodeOperations.insertNextSiblingChild(nextChild, SModelOperations.createNewNode(SNodeOperations.getModel(item), null, "jetbrains.mps.gtext.structure.GNewLine"));
        }
        SNodeOperations.deleteNode(optChild);
      } else
      if (SNodeOperations.isInstanceOf(optChild, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1166926309597l, "jetbrains.mps.gtext.structure.GLine"))) {
        SNode nextChild = optChild;
        SNodeOperations.insertNextSiblingChild(nextChild, SModelOperations.createNewNode(SNodeOperations.getModel(item), null, "jetbrains.mps.gtext.structure.GIndent"));
        nextChild = SNodeOperations.cast(SNodeOperations.getNextSibling(nextChild), MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412935041l, "jetbrains.mps.gtext.structure.GItem"));
        nextChild = inlineChildren(optChild, nextChild);
        SNodeOperations.insertNextSiblingChild(nextChild, SModelOperations.createNewNode(SNodeOperations.getModel(item), null, "jetbrains.mps.gtext.structure.GNewLine"));
        SNodeOperations.deleteNode(optChild);
      }
    }
    // concat text 
    SNode t = null;
    for (SNode child : ListSequence.fromList((List<SNode>) n.getChildren("item"))) {
      if (SNodeOperations.isInstanceOf(child, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412789837l, "jetbrains.mps.gtext.structure.GText"))) {
        if (t == null) {
          t = SNodeOperations.cast(child, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412789837l, "jetbrains.mps.gtext.structure.GText"));
        } else {
          String text = SPropertyOperations.getString(SNodeOperations.cast(child, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412789837l, "jetbrains.mps.gtext.structure.GText")), MetaAdapterFactory.getProperty(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412789837l, 1164413036326l, "text"));
          if (text != null) {
            SPropertyOperations.set(t, MetaAdapterFactory.getProperty(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412789837l, 1164413036326l, "text"), SPropertyOperations.getString(t, MetaAdapterFactory.getProperty(new UUID(-6324114011398976607l, -8974808928016009858l), 1164412789837l, 1164413036326l, "text")) + text);
          }
          SNodeOperations.deleteNode(child);
        }
      } else {
        t = null;
      }
    }
    return IterableUtil.asCollection(n.getChildren("item")).size();
  }
  public static SNode inlineChildren(SNode optChild, SNode nextChild) {
    SNode nc = nextChild;
    // cast to GItemList, because all item list containers have the same name for children items - "item" 
    while (ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(optChild, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1239125024709l, "jetbrains.mps.gtext.structure.GCompositeItem")), "virtual_getItems_1239125087745", new Object[]{})).isNotEmpty()) {
      SNode childOfChild = ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(optChild, MetaAdapterFactory.getConcept(new UUID(-6324114011398976607l, -8974808928016009858l), 1239125024709l, "jetbrains.mps.gtext.structure.GCompositeItem")), "virtual_getItems_1239125087745", new Object[]{})).first();
      SNodeOperations.insertNextSiblingChild(nc, childOfChild);
      nc = childOfChild;
    }
    return nc;
  }
}
