package jetbrains.mps.buildlanguage.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import java.util.List;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class IDeclaration_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode virtual_getParent_5699548131010535048(SNode thisNode) {
    return null;
  }
  public static boolean virtual_isHeirOf_5699548131010535069(SNode thisNode, SNode probableParent) {
    if (thisNode == probableParent) {
      return true;
    }
    if (BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getParent_5699548131010535048", new Object[]{}) == null) {
      return false;
    }
    return BehaviorReflection.invokeVirtual(Boolean.TYPE, BehaviorReflection.invokeVirtual((Class<SNode>) ((Class) Object.class), thisNode, "virtual_getParent_5699548131010535048", new Object[]{}), "virtual_isHeirOf_5699548131010535069", new Object[]{probableParent});
  }
  public static boolean virtual_isHeirOf_5699548131010535105(SNode thisNode, List<SNode> parents) {
    for (SNode parent : ListSequence.fromList(parents)) {
      if (BehaviorReflection.invokeVirtual(Boolean.TYPE, thisNode, "virtual_isHeirOf_5699548131010535069", new Object[]{parent})) {
        return true;
      }
    }
    return false;
  }
}
