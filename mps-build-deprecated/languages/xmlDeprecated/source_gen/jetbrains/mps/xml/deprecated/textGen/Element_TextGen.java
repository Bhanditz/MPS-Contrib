package jetbrains.mps.xml.deprecated.textGen;

/*Generated by MPS */

import jetbrains.mps.textGen.SNodeTextGen;
import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SPropertyOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.internal.collections.runtime.Sequence;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import org.jetbrains.mps.openapi.language.SConceptRepository;
import jetbrains.mps.util.NameUtil;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;

public class Element_TextGen extends SNodeTextGen {
  public void doGenerateText(SNode node) {
    this.indentBuffer();
    this.append("<");
    this.append(SPropertyOperations.getString(node, "name"));
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "attribute", true)).isNotEmpty()) {
      this.append(" ");
    }
    {
      Iterable<SNode> collection = SLinkOperations.getTargets(node, "attribute", true);
      final SNode lastItem = Sequence.fromIterable(collection).last();
      for (SNode item : collection) {
        appendNode(item);
        if (item != lastItem) {
          append(" ");
        }
      }
    }
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "content", true)).isEmpty()) {
      this.append(" />");
      this.appendNewLine();
      return;
    }
    this.append(">");
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "content", true)).isNotEmpty() && BehaviorReflection.invokeVirtualStatic(Boolean.TYPE, SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(ListSequence.fromList(SLinkOperations.getTargets(node, "content", true)).first()))), "virtual_indented_1262430001741498172", new Object[]{})) {
      this.appendNewLine();
    }
    this.increaseDepth();
    {
      Iterable<SNode> collection = SLinkOperations.getTargets(node, "content", true);
      for (SNode item : collection) {
        appendNode(item);
      }
    }
    this.decreaseDepth();
    if (ListSequence.fromList(SLinkOperations.getTargets(node, "content", true)).isNotEmpty() && BehaviorReflection.invokeVirtualStatic(Boolean.TYPE, SConceptRepository.getInstance().getConcept(NameUtil.nodeFQName(SNodeOperations.getConceptDeclaration(ListSequence.fromList(SLinkOperations.getTargets(node, "content", true)).last()))), "virtual_indented_1262430001741498172", new Object[]{})) {
      this.indentBuffer();
    }
    this.append("</");
    this.append(SPropertyOperations.getString(node, "name"));
    this.append(">");
    this.appendNewLine();
  }
}
