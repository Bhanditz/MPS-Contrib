package jetbrains.mps.build.generictasks.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 0:
        return new Attribute_Constraints();
      case 4:
        return new TaskCall_Constraints();
      case 3:
        return new PathReference_Constraints();
      case 6:
        return new TaskReference_Constraints();
      case 1:
        return new BuiltInTaskDeclaration_Constraints();
      case 5:
        return new TaskInterfaceDeclaration_Constraints();
      case 2:
        return new NestedDeclaration_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getConceptId();
    if (id == 353793545802643466l) {
      return new Attribute_Constraints();
    }
    if (id == 353793545802643477l) {
      return new TaskCall_Constraints();
    }
    if (id == 353793545802854870l) {
      return new PathReference_Constraints();
    }
    if (id == 3037831562615764081l) {
      return new TaskReference_Constraints();
    }
    if (id == 353793545802643486l) {
      return new BuiltInTaskDeclaration_Constraints();
    }
    if (id == 353793545802643483l) {
      return new TaskInterfaceDeclaration_Constraints();
    }
    if (id == 353793545802643498l) {
      return new NestedDeclaration_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.build.generictasks.structure.Attribute", "jetbrains.mps.build.generictasks.structure.BuiltInTaskDeclaration", "jetbrains.mps.build.generictasks.structure.NestedDeclaration", "jetbrains.mps.build.generictasks.structure.PathReference", "jetbrains.mps.build.generictasks.structure.TaskCall", "jetbrains.mps.build.generictasks.structure.TaskInterfaceDeclaration", "jetbrains.mps.build.generictasks.structure.TaskReference"};
}
