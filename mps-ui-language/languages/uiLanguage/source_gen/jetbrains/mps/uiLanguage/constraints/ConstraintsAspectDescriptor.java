package jetbrains.mps.uiLanguage.constraints;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConstraintsDescriptor;
import java.util.Arrays;
import jetbrains.mps.smodel.runtime.base.BaseConstraintsDescriptor;
import jetbrains.mps.smodel.adapter.ids.SConceptId;

public class ConstraintsAspectDescriptor implements jetbrains.mps.smodel.runtime.ConstraintsAspectDescriptor {
  public ConstraintsAspectDescriptor() {
  }
  public ConstraintsDescriptor getDescriptor(String fqName) {
    switch (Arrays.binarySearch(stringSwitchCases_2qnle6_a0a0b, fqName)) {
      case 7:
        return new ComponentReference_Constraints();
      case 6:
        return new ComponentInstance_Constraints();
      case 5:
        return new ComponentController_Constraints();
      case 2:
        return new AttributeValue_Constraints();
      case 16:
        return new StubCellRendererInfo_Constraints();
      case 8:
        return new EventHandlerReference_Constraints();
      case 4:
        return new CellRendererAttribute_Constraints();
      case 12:
        return new RaiseOperation_Constraints();
      case 13:
        return new RemoveListenerOperation_Constraints();
      case 9:
        return new InlineRenderer_Constraints();
      case 14:
        return new RenderingObject_Constraints();
      case 11:
        return new RaiseInternalStatement_Constraints();
      case 15:
        return new StandardDialog_Constraints();
      case 10:
        return new ListElements_Constraints();
      case 1:
        return new AddListenerOperation_Constraints();
      case 0:
        return new ActionHandler_Constraints();
      case 3:
        return new BindExpression_Constraints();
      default:
        return new BaseConstraintsDescriptor(fqName);
    }
  }
  public ConstraintsDescriptor getDescriptor(SConceptId conceptId) {
    long id = conceptId.getIdValue();
    if (id == 0x1180909f14dL) {
      return new ComponentReference_Constraints();
    }
    if (id == 0x117f3e80750L) {
      return new ComponentInstance_Constraints();
    }
    if (id == 0x117f3eeb9f9L) {
      return new ComponentController_Constraints();
    }
    if (id == 0x117f3fcec21L) {
      return new AttributeValue_Constraints();
    }
    if (id == 0x119c3fc8bf3L) {
      return new StubCellRendererInfo_Constraints();
    }
    if (id == 0x1196b47d36dL) {
      return new EventHandlerReference_Constraints();
    }
    if (id == 0x119c45296acL) {
      return new CellRendererAttribute_Constraints();
    }
    if (id == 0x11947c54b4dL) {
      return new RaiseOperation_Constraints();
    }
    if (id == 0x11947ce5df6L) {
      return new RemoveListenerOperation_Constraints();
    }
    if (id == 0x119d890477fL) {
      return new InlineRenderer_Constraints();
    }
    if (id == 0x119d8b4efa7L) {
      return new RenderingObject_Constraints();
    }
    if (id == 0x119a516eb60L) {
      return new RaiseInternalStatement_Constraints();
    }
    if (id == 0x1180e42b522L) {
      return new StandardDialog_Constraints();
    }
    if (id == 0x1181d674dc8L) {
      return new ListElements_Constraints();
    }
    if (id == 0x11947ce0de0L) {
      return new AddListenerOperation_Constraints();
    }
    if (id == 0x1180921a820L) {
      return new ActionHandler_Constraints();
    }
    if (id == 0x117f8770044L) {
      return new BindExpression_Constraints();
    }
    return new BaseConstraintsDescriptor(conceptId);
  }
  private static String[] stringSwitchCases_2qnle6_a0a0b = new String[]{"jetbrains.mps.uiLanguage.structure.ActionHandler", "jetbrains.mps.uiLanguage.structure.AddListenerOperation", "jetbrains.mps.uiLanguage.structure.AttributeValue", "jetbrains.mps.uiLanguage.structure.BindExpression", "jetbrains.mps.uiLanguage.structure.CellRendererAttribute", "jetbrains.mps.uiLanguage.structure.ComponentController", "jetbrains.mps.uiLanguage.structure.ComponentInstance", "jetbrains.mps.uiLanguage.structure.ComponentReference", "jetbrains.mps.uiLanguage.structure.EventHandlerReference", "jetbrains.mps.uiLanguage.structure.InlineRenderer", "jetbrains.mps.uiLanguage.structure.ListElements", "jetbrains.mps.uiLanguage.structure.RaiseInternalStatement", "jetbrains.mps.uiLanguage.structure.RaiseOperation", "jetbrains.mps.uiLanguage.structure.RemoveListenerOperation", "jetbrains.mps.uiLanguage.structure.RenderingObject", "jetbrains.mps.uiLanguage.structure.StandardDialog", "jetbrains.mps.uiLanguage.structure.StubCellRendererInfo"};
}
