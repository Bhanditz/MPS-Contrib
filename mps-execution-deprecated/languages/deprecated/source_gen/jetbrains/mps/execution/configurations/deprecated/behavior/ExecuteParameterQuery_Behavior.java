package jetbrains.mps.execution.configurations.deprecated.behavior;

/*Generated by MPS */

import org.jetbrains.mps.openapi.model.SNode;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SLinkOperations;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import java.util.List;
import jetbrains.mps.smodel.behaviour.BehaviorReflection;
import jetbrains.mps.lang.smodel.generator.smodelAdapter.SNodeOperations;
import jetbrains.mps.internal.collections.runtime.ListSequence;

public class ExecuteParameterQuery_Behavior {
  public static void init(SNode thisNode) {
  }
  public static SNode virtual_getExpectedReturnType_1213877374441(SNode thisNode) {
    return SLinkOperations.getTarget(thisNode, MetaAdapterFactory.getContainmentLink(0x82c32a3b4a544fc1L, 0xb5517ff9f198d7c1L, 0x45f0a233e6b2fcbL, 0x45f0a233e6b2fccL, "parameterType"));
  }
  public static List<SNode> virtual_getParameters_1213877374450(SNode thisNode) {
    List<SNode> conceptFunctionParameterConcepts = BehaviorReflection.invokeSuper((Class<List<SNode>>) ((Class) Object.class), thisNode, "jetbrains.mps.baseLanguage.structure.ConceptFunction", "virtual_getParameters_1213877374450", new Object[]{});
    SNode root = SNodeOperations.getNodeAncestor(thisNode, null, false, true);
    if (SNodeOperations.isInstanceOf(root, MetaAdapterFactory.getInterfaceConcept(0x82c32a3b4a544fc1L, 0xb5517ff9f198d7c1L, 0x45f0a233e6b3034L, "jetbrains.mps.execution.configurations.deprecated.structure.IEnhancedRunConfiguration"))) {
      ListSequence.fromList(conceptFunctionParameterConcepts).addSequence(ListSequence.fromList(BehaviorReflection.invokeVirtual((Class<List<SNode>>) ((Class) Object.class), SNodeOperations.cast(root, MetaAdapterFactory.getInterfaceConcept(0x82c32a3b4a544fc1L, 0xb5517ff9f198d7c1L, 0x45f0a233e6b3034L, "jetbrains.mps.execution.configurations.deprecated.structure.IEnhancedRunConfiguration")), "virtual_getAdditionalParameters_314981645426570797", new Object[]{})));
    }
    return conceptFunctionParameterConcepts;
  }
}
