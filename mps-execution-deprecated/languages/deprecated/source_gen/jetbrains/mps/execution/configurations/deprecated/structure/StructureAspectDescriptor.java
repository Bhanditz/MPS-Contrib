package jetbrains.mps.execution.configurations.deprecated.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder;
import jetbrains.mps.smodel.runtime.StaticScope;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAbstractCheckConfigBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.AbstractCheckConfigBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptAbstractEnhancedConceptFunction = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").abstract_().staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptActionListStatement = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ActionListStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific").children(new String[]{"actions"}, new boolean[]{false}).alias("actionList", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptActionsList_FunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ActionsList_FunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("actionsList", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptActionsStatement = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ActionsStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific").children(new String[]{"action"}, new boolean[]{true}).alias("actions", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptApplyEditorBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ApplyEditorBlock").super_("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").parents("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").alias("apply", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptBaseCreatorTarget = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").abstract_().create();
  /*package*/ final ConceptDescriptor myConceptCheckConfigurationBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.CheckConfigurationBlock").super_("jetbrains.mps.execution.configurations.deprecated.structure.AbstractCheckConfigBlock").parents("jetbrains.mps.execution.configurations.deprecated.structure.AbstractCheckConfigBlock").alias("check", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptComponentInsideOfChangeListenerAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ComponentInsideOfChangeListenerAnnotation").super_("jetbrains.mps.lang.core.structure.NodeAttribute").parents("jetbrains.mps.lang.core.structure.NodeAttribute").alias("component inside of change listener", "").create();
  /*package*/ final ConceptDescriptor myConceptComponentReference = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ComponentReference").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression").alias("component", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConfigurationEditorDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ConfigurationEditorDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept").children(new String[]{"editor", "applyBlock", "resetBlock", "disposeBlock"}, new boolean[]{false, false, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptConsoleExpression = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ConsoleExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific").alias("console", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConsoleType = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ConsoleType").super_("jetbrains.mps.baseLanguage.structure.Type").parents("jetbrains.mps.baseLanguage.structure.Type").alias("console", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptConsole_FunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.Console_FunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("console", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateRunConfigBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.CreateRunConfigBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("create", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateRunConfigBlockParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.CreateRunConfigBlockParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("parameter", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptCreateRunConfigStatement = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.CreateRunConfigStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").references("runConfig").children(new String[]{"configName", "suggestedName", "property"}, new boolean[]{false, false, true}).alias("createRunConfig", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDebugSessionCreator = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.DebugSessionCreator").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("debug session creator", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDisposeConsoleBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.DisposeConsoleBlock").super_("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").parents("jetbrains.mps.baseLanguage.closures.structure.ClosureLiteral").alias("dispose", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptDisposeEditorBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.DisposeEditorBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("dispose", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptEnvironment_FunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.Environment_FunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("environment", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteConfigBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ExecuteConfigBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction", "jetbrains.mps.execution.configurations.deprecated.structure.IExecuteConfigBlock").alias("execute", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteParameterQuery = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ExecuteParameterQuery").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").children(new String[]{"parameterType"}, new boolean[]{false}).alias("parameter query", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecuteSpecific = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific").interface_().create();
  /*package*/ final ConceptDescriptor myConceptExecutionConsoleStatement = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ExecutionConsoleStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific").children(new String[]{"consoleComponent", "disposeBlock"}, new boolean[]{false, false}).alias("console", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptExecutor_FunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.Executor_FunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").alias("executor", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGetConfigurationIconBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.GetConfigurationIconBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("getIcon", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptGetUserDataExpression = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.GetUserDataExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific").children(new String[]{"argument"}, new boolean[]{false}).alias("user data", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptIEnhancedRunConfiguration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.IEnhancedRunConfiguration").interface_().create();
  /*package*/ final ConceptDescriptor myConceptIExecuteConfigBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.IExecuteConfigBlock").interface_().create();
  /*package*/ final ConceptDescriptor myConceptIJavaRunConfigurationParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.IJavaRunConfigurationParameter").interface_().create();
  /*package*/ final ConceptDescriptor myConceptIOnChangeEditorBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.IOnChangeEditorBlock").interface_().create();
  /*package*/ final ConceptDescriptor myConceptIRunConfigPropertyInstance = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.IRunConfigPropertyInstance").interface_().parents("jetbrains.mps.lang.core.structure.INamedConcept").children(new String[]{"propertyValue"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptIsApplicableBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.IsApplicableBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("is applicable", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptJavaCheckBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.JavaCheckBlock").super_("jetbrains.mps.execution.configurations.deprecated.structure.AbstractCheckConfigBlock").parents("jetbrains.mps.execution.configurations.deprecated.structure.AbstractCheckConfigBlock").alias("check java", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptJavaConfigurationRunParameters_FunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.JavaConfigurationRunParameters_FunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.IJavaRunConfigurationParameter").alias("javaParameters", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptJavaNodeConfigurationEditorDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.JavaNodeConfigurationEditorDeclaration").super_("jetbrains.mps.execution.configurations.deprecated.structure.ConfigurationEditorDeclaration").parents("jetbrains.mps.execution.configurations.deprecated.structure.ConfigurationEditorDeclaration").children(new String[]{"onChangeNodeBlock"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptJavaNodeRunConfiguration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.JavaNodeRunConfiguration").super_("jetbrains.mps.execution.configurations.deprecated.structure.JavaRunConfiguration").parents("jetbrains.mps.execution.configurations.deprecated.structure.JavaRunConfiguration").properties("generate").references("conceptDeclaration").children(new String[]{"checkBlock", "editor", "isApplicableBlock"}, new boolean[]{false, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptJavaRunConfiguration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.JavaRunConfiguration").super_("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigurationDeclaration").parents("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigurationDeclaration", "jetbrains.mps.execution.configurations.deprecated.structure.IEnhancedRunConfiguration").create();
  /*package*/ final ConceptDescriptor myConceptMakeConfigBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.MakeConfigBlock").super_("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").parents("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").alias("make", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptModelCreatorTarget = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ModelCreatorTarget").super_("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").parents("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").alias("model", "").create();
  /*package*/ final ConceptDescriptor myConceptModuleCreatorTarget = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ModuleCreatorTarget").super_("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").parents("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").alias("module", "").create();
  /*package*/ final ConceptDescriptor myConceptNodeCreatorTarget = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.NodeCreatorTarget").super_("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").parents("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").references("concept").alias("node", "").create();
  /*package*/ final ConceptDescriptor myConceptNodeRunConfigPropertyInstance = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.NodeRunConfigPropertyInstance").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.execution.configurations.deprecated.structure.IRunConfigPropertyInstance").alias("node", "").create();
  /*package*/ final ConceptDescriptor myConceptNode_FunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.Node_FunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.IJavaRunConfigurationParameter").alias("node", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptNodesCreatorTarget = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.NodesCreatorTarget").super_("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").parents("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").references("concept").alias("nlist", "").create();
  /*package*/ final ConceptDescriptor myConceptOnChangeNodeBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.OnChangeNodeBlock").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction", "jetbrains.mps.execution.configurations.deprecated.structure.IOnChangeEditorBlock").alias("onChange", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptParameter_FunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.Parameter_FunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter", "jetbrains.mps.lang.core.structure.IDontSubstituteByDefault").children(new String[]{"userSpecifiedParameterType"}, new boolean[]{false}).alias("parameter", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptParametrizedExecuteActions = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ParametrizedExecuteActions").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").alias("put execute actions", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptParametrizedExecuteBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ParametrizedExecuteBlock").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.execution.configurations.deprecated.structure.IExecuteConfigBlock").children(new String[]{"executeParameterQuery", "executeActions", "executeConsole", "executeProcess"}, new boolean[]{false, false, false, false}).alias("parametrized execute", "").create();
  /*package*/ final ConceptDescriptor myConceptParametrizedExecuteConsole = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ParametrizedExecuteConsole").super_("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").parents("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").alias("create console", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptParametrizedExecuteProcess = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ParametrizedExecuteProcess").super_("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").parents("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").alias("create process", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPrepareConceptFunction = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.PrepareConceptFunction").super_("jetbrains.mps.baseLanguage.structure.ConceptFunction").parents("jetbrains.mps.baseLanguage.structure.ConceptFunction").children(new String[]{"retrunTypeParameter"}, new boolean[]{false}).alias("prepare", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptPrepareReturnType_FunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.PrepareReturnType_FunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("preparedValue", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptProcessStatement = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ProcessStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific").children(new String[]{"process", "command"}, new boolean[]{false, false}).alias("process", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptProjectCreatorTarget = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ProjectCreatorTarget").super_("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").parents("jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget").alias("project", "").create();
  /*package*/ final ConceptDescriptor myConceptProjectExpression = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ProjectExpression").super_("jetbrains.mps.baseLanguage.structure.Expression").parents("jetbrains.mps.baseLanguage.structure.Expression", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific").alias("project", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptProject_ConceptFunctionParameter = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.Project_ConceptFunctionParameter").super_("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").parents("jetbrains.mps.baseLanguage.structure.ConceptFunctionParameter").alias("project", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptReportErrorStatement = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ReportErrorStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").children(new String[]{"error"}, new boolean[]{false}).alias("report error", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptResetEditorBlock = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.ResetEditorBlock").super_("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").parents("jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction").alias("reset", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRunConfigExecutionParameterDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigExecutionParameterDeclaration").super_("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration").parents("jetbrains.mps.lang.plugin.structure.ActionDataParameterDeclaration").create();
  /*package*/ final ConceptDescriptor myConceptRunConfigMainNodeStatement = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigMainNodeStatement").super_("jetbrains.mps.baseLanguage.structure.Statement").parents("jetbrains.mps.baseLanguage.structure.Statement").children(new String[]{"contextItem"}, new boolean[]{false}).alias("main context item", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRunConfigParameterReferenceOperation = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigParameterReferenceOperation").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.baseLanguage.classifiers.structure.IMemberOperation").references("runConfigParameter").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRunConfigPropertyInstance = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigPropertyInstance").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.execution.configurations.deprecated.structure.IRunConfigPropertyInstance").references("property").children(new String[]{"propertyValue"}, new boolean[]{false}).create();
  /*package*/ final ConceptDescriptor myConceptRunConfigType = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigType").super_("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").parents("jetbrains.mps.baseLanguage.classifiers.structure.BaseClassifierType").references("runConfig").alias("runconfig<<{runConfig}>>", "").staticScope(StaticScope.NONE).create();
  /*package*/ final ConceptDescriptor myConceptRunConfigurationDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigurationDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.baseLanguage.classifiers.structure.IClassifier", "jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy").properties("iconPath", "caption", "isDebuggable").references("configType", "stateTypeParameter").children(new String[]{"property", "editor", "iconBlock", "checkBlock", "executeBlock", "executionParameter", "methodDeclaration", "debugSessionCreator", "prepareBlock", "makeBlock"}, new boolean[]{true, false, false, false, false, true, true, false, false, false}).create();
  /*package*/ final ConceptDescriptor myConceptRunConfigurationMethodDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigurationMethodDeclaration").super_("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration").parents("jetbrains.mps.baseLanguage.classifiers.structure.DefaultClassifierMethodDeclaration").create();
  /*package*/ final ConceptDescriptor myConceptRunConfigurationTypeDeclaration = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.RunConfigurationTypeDeclaration").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept", "jetbrains.mps.lang.checkedName.structure.ICheckedNamePolicy").properties("iconPath", "caption", "description").create();
  /*package*/ final ConceptDescriptor myConceptUniversalRunConfigCreator = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.UniversalRunConfigCreator").super_("jetbrains.mps.lang.core.structure.BaseConcept").parents("jetbrains.mps.lang.core.structure.BaseConcept", "jetbrains.mps.lang.core.structure.INamedConcept").references("rcType").children(new String[]{"target", "createBlock"}, new boolean[]{false, false}).create();
  /*package*/ final ConceptDescriptor myConceptUserComponentReferenceAnnotation = new ConceptDescriptorBuilder("jetbrains.mps.execution.configurations.deprecated.structure.UserComponentReferenceAnnotation").super_("jetbrains.mps.lang.core.structure.NodeAttribute").parents("jetbrains.mps.lang.core.structure.NodeAttribute").alias("user component reference", "").create();

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAbstractCheckConfigBlock, myConceptAbstractEnhancedConceptFunction, myConceptActionListStatement, myConceptActionsList_FunctionParameter, myConceptActionsStatement, myConceptApplyEditorBlock, myConceptBaseCreatorTarget, myConceptCheckConfigurationBlock, myConceptComponentInsideOfChangeListenerAnnotation, myConceptComponentReference, myConceptConfigurationEditorDeclaration, myConceptConsoleExpression, myConceptConsoleType, myConceptConsole_FunctionParameter, myConceptCreateRunConfigBlock, myConceptCreateRunConfigBlockParameter, myConceptCreateRunConfigStatement, myConceptDebugSessionCreator, myConceptDisposeConsoleBlock, myConceptDisposeEditorBlock, myConceptEnvironment_FunctionParameter, myConceptExecuteConfigBlock, myConceptExecuteParameterQuery, myConceptExecuteSpecific, myConceptExecutionConsoleStatement, myConceptExecutor_FunctionParameter, myConceptGetConfigurationIconBlock, myConceptGetUserDataExpression, myConceptIEnhancedRunConfiguration, myConceptIExecuteConfigBlock, myConceptIJavaRunConfigurationParameter, myConceptIOnChangeEditorBlock, myConceptIRunConfigPropertyInstance, myConceptIsApplicableBlock, myConceptJavaCheckBlock, myConceptJavaConfigurationRunParameters_FunctionParameter, myConceptJavaNodeConfigurationEditorDeclaration, myConceptJavaNodeRunConfiguration, myConceptJavaRunConfiguration, myConceptMakeConfigBlock, myConceptModelCreatorTarget, myConceptModuleCreatorTarget, myConceptNodeCreatorTarget, myConceptNodeRunConfigPropertyInstance, myConceptNode_FunctionParameter, myConceptNodesCreatorTarget, myConceptOnChangeNodeBlock, myConceptParameter_FunctionParameter, myConceptParametrizedExecuteActions, myConceptParametrizedExecuteBlock, myConceptParametrizedExecuteConsole, myConceptParametrizedExecuteProcess, myConceptPrepareConceptFunction, myConceptPrepareReturnType_FunctionParameter, myConceptProcessStatement, myConceptProjectCreatorTarget, myConceptProjectExpression, myConceptProject_ConceptFunctionParameter, myConceptReportErrorStatement, myConceptResetEditorBlock, myConceptRunConfigExecutionParameterDeclaration, myConceptRunConfigMainNodeStatement, myConceptRunConfigParameterReferenceOperation, myConceptRunConfigPropertyInstance, myConceptRunConfigType, myConceptRunConfigurationDeclaration, myConceptRunConfigurationMethodDeclaration, myConceptRunConfigurationTypeDeclaration, myConceptUniversalRunConfigCreator, myConceptUserComponentReferenceAnnotation);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(String conceptFqName) {
    switch (Arrays.binarySearch(stringSwitchCases_1htk8d_a0a0vc, conceptFqName)) {
      case 0:
        return myConceptAbstractCheckConfigBlock;
      case 1:
        return myConceptAbstractEnhancedConceptFunction;
      case 2:
        return myConceptActionListStatement;
      case 3:
        return myConceptActionsList_FunctionParameter;
      case 4:
        return myConceptActionsStatement;
      case 5:
        return myConceptApplyEditorBlock;
      case 6:
        return myConceptBaseCreatorTarget;
      case 7:
        return myConceptCheckConfigurationBlock;
      case 8:
        return myConceptComponentInsideOfChangeListenerAnnotation;
      case 9:
        return myConceptComponentReference;
      case 10:
        return myConceptConfigurationEditorDeclaration;
      case 11:
        return myConceptConsoleExpression;
      case 12:
        return myConceptConsoleType;
      case 13:
        return myConceptConsole_FunctionParameter;
      case 14:
        return myConceptCreateRunConfigBlock;
      case 15:
        return myConceptCreateRunConfigBlockParameter;
      case 16:
        return myConceptCreateRunConfigStatement;
      case 17:
        return myConceptDebugSessionCreator;
      case 18:
        return myConceptDisposeConsoleBlock;
      case 19:
        return myConceptDisposeEditorBlock;
      case 20:
        return myConceptEnvironment_FunctionParameter;
      case 21:
        return myConceptExecuteConfigBlock;
      case 22:
        return myConceptExecuteParameterQuery;
      case 23:
        return myConceptExecuteSpecific;
      case 24:
        return myConceptExecutionConsoleStatement;
      case 25:
        return myConceptExecutor_FunctionParameter;
      case 26:
        return myConceptGetConfigurationIconBlock;
      case 27:
        return myConceptGetUserDataExpression;
      case 28:
        return myConceptIEnhancedRunConfiguration;
      case 29:
        return myConceptIExecuteConfigBlock;
      case 30:
        return myConceptIJavaRunConfigurationParameter;
      case 31:
        return myConceptIOnChangeEditorBlock;
      case 32:
        return myConceptIRunConfigPropertyInstance;
      case 33:
        return myConceptIsApplicableBlock;
      case 34:
        return myConceptJavaCheckBlock;
      case 35:
        return myConceptJavaConfigurationRunParameters_FunctionParameter;
      case 36:
        return myConceptJavaNodeConfigurationEditorDeclaration;
      case 37:
        return myConceptJavaNodeRunConfiguration;
      case 38:
        return myConceptJavaRunConfiguration;
      case 39:
        return myConceptMakeConfigBlock;
      case 40:
        return myConceptModelCreatorTarget;
      case 41:
        return myConceptModuleCreatorTarget;
      case 42:
        return myConceptNodeCreatorTarget;
      case 43:
        return myConceptNodeRunConfigPropertyInstance;
      case 44:
        return myConceptNode_FunctionParameter;
      case 45:
        return myConceptNodesCreatorTarget;
      case 46:
        return myConceptOnChangeNodeBlock;
      case 47:
        return myConceptParameter_FunctionParameter;
      case 48:
        return myConceptParametrizedExecuteActions;
      case 49:
        return myConceptParametrizedExecuteBlock;
      case 50:
        return myConceptParametrizedExecuteConsole;
      case 51:
        return myConceptParametrizedExecuteProcess;
      case 52:
        return myConceptPrepareConceptFunction;
      case 53:
        return myConceptPrepareReturnType_FunctionParameter;
      case 54:
        return myConceptProcessStatement;
      case 55:
        return myConceptProjectCreatorTarget;
      case 56:
        return myConceptProjectExpression;
      case 57:
        return myConceptProject_ConceptFunctionParameter;
      case 58:
        return myConceptReportErrorStatement;
      case 59:
        return myConceptResetEditorBlock;
      case 60:
        return myConceptRunConfigExecutionParameterDeclaration;
      case 61:
        return myConceptRunConfigMainNodeStatement;
      case 62:
        return myConceptRunConfigParameterReferenceOperation;
      case 63:
        return myConceptRunConfigPropertyInstance;
      case 64:
        return myConceptRunConfigType;
      case 65:
        return myConceptRunConfigurationDeclaration;
      case 66:
        return myConceptRunConfigurationMethodDeclaration;
      case 67:
        return myConceptRunConfigurationTypeDeclaration;
      case 68:
        return myConceptUniversalRunConfigCreator;
      case 69:
        return myConceptUserComponentReferenceAnnotation;
      default:
        return null;
    }
  }
  private static String[] stringSwitchCases_1htk8d_a0a0vc = new String[]{"jetbrains.mps.execution.configurations.deprecated.structure.AbstractCheckConfigBlock", "jetbrains.mps.execution.configurations.deprecated.structure.AbstractEnhancedConceptFunction", "jetbrains.mps.execution.configurations.deprecated.structure.ActionListStatement", "jetbrains.mps.execution.configurations.deprecated.structure.ActionsList_FunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.ActionsStatement", "jetbrains.mps.execution.configurations.deprecated.structure.ApplyEditorBlock", "jetbrains.mps.execution.configurations.deprecated.structure.BaseCreatorTarget", "jetbrains.mps.execution.configurations.deprecated.structure.CheckConfigurationBlock", "jetbrains.mps.execution.configurations.deprecated.structure.ComponentInsideOfChangeListenerAnnotation", "jetbrains.mps.execution.configurations.deprecated.structure.ComponentReference", "jetbrains.mps.execution.configurations.deprecated.structure.ConfigurationEditorDeclaration", "jetbrains.mps.execution.configurations.deprecated.structure.ConsoleExpression", "jetbrains.mps.execution.configurations.deprecated.structure.ConsoleType", "jetbrains.mps.execution.configurations.deprecated.structure.Console_FunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.CreateRunConfigBlock", "jetbrains.mps.execution.configurations.deprecated.structure.CreateRunConfigBlockParameter", "jetbrains.mps.execution.configurations.deprecated.structure.CreateRunConfigStatement", "jetbrains.mps.execution.configurations.deprecated.structure.DebugSessionCreator", "jetbrains.mps.execution.configurations.deprecated.structure.DisposeConsoleBlock", "jetbrains.mps.execution.configurations.deprecated.structure.DisposeEditorBlock", "jetbrains.mps.execution.configurations.deprecated.structure.Environment_FunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteConfigBlock", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteParameterQuery", "jetbrains.mps.execution.configurations.deprecated.structure.ExecuteSpecific", "jetbrains.mps.execution.configurations.deprecated.structure.ExecutionConsoleStatement", "jetbrains.mps.execution.configurations.deprecated.structure.Executor_FunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.GetConfigurationIconBlock", "jetbrains.mps.execution.configurations.deprecated.structure.GetUserDataExpression", "jetbrains.mps.execution.configurations.deprecated.structure.IEnhancedRunConfiguration", "jetbrains.mps.execution.configurations.deprecated.structure.IExecuteConfigBlock", "jetbrains.mps.execution.configurations.deprecated.structure.IJavaRunConfigurationParameter", "jetbrains.mps.execution.configurations.deprecated.structure.IOnChangeEditorBlock", "jetbrains.mps.execution.configurations.deprecated.structure.IRunConfigPropertyInstance", "jetbrains.mps.execution.configurations.deprecated.structure.IsApplicableBlock", "jetbrains.mps.execution.configurations.deprecated.structure.JavaCheckBlock", "jetbrains.mps.execution.configurations.deprecated.structure.JavaConfigurationRunParameters_FunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.JavaNodeConfigurationEditorDeclaration", "jetbrains.mps.execution.configurations.deprecated.structure.JavaNodeRunConfiguration", "jetbrains.mps.execution.configurations.deprecated.structure.JavaRunConfiguration", "jetbrains.mps.execution.configurations.deprecated.structure.MakeConfigBlock", "jetbrains.mps.execution.configurations.deprecated.structure.ModelCreatorTarget", "jetbrains.mps.execution.configurations.deprecated.structure.ModuleCreatorTarget", "jetbrains.mps.execution.configurations.deprecated.structure.NodeCreatorTarget", "jetbrains.mps.execution.configurations.deprecated.structure.NodeRunConfigPropertyInstance", "jetbrains.mps.execution.configurations.deprecated.structure.Node_FunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.NodesCreatorTarget", "jetbrains.mps.execution.configurations.deprecated.structure.OnChangeNodeBlock", "jetbrains.mps.execution.configurations.deprecated.structure.Parameter_FunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.ParametrizedExecuteActions", "jetbrains.mps.execution.configurations.deprecated.structure.ParametrizedExecuteBlock", "jetbrains.mps.execution.configurations.deprecated.structure.ParametrizedExecuteConsole", "jetbrains.mps.execution.configurations.deprecated.structure.ParametrizedExecuteProcess", "jetbrains.mps.execution.configurations.deprecated.structure.PrepareConceptFunction", "jetbrains.mps.execution.configurations.deprecated.structure.PrepareReturnType_FunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.ProcessStatement", "jetbrains.mps.execution.configurations.deprecated.structure.ProjectCreatorTarget", "jetbrains.mps.execution.configurations.deprecated.structure.ProjectExpression", "jetbrains.mps.execution.configurations.deprecated.structure.Project_ConceptFunctionParameter", "jetbrains.mps.execution.configurations.deprecated.structure.ReportErrorStatement", "jetbrains.mps.execution.configurations.deprecated.structure.ResetEditorBlock", "jetbrains.mps.execution.configurations.deprecated.structure.RunConfigExecutionParameterDeclaration", "jetbrains.mps.execution.configurations.deprecated.structure.RunConfigMainNodeStatement", "jetbrains.mps.execution.configurations.deprecated.structure.RunConfigParameterReferenceOperation", "jetbrains.mps.execution.configurations.deprecated.structure.RunConfigPropertyInstance", "jetbrains.mps.execution.configurations.deprecated.structure.RunConfigType", "jetbrains.mps.execution.configurations.deprecated.structure.RunConfigurationDeclaration", "jetbrains.mps.execution.configurations.deprecated.structure.RunConfigurationMethodDeclaration", "jetbrains.mps.execution.configurations.deprecated.structure.RunConfigurationTypeDeclaration", "jetbrains.mps.execution.configurations.deprecated.structure.UniversalRunConfigCreator", "jetbrains.mps.execution.configurations.deprecated.structure.UserComponentReferenceAnnotation"};
}
